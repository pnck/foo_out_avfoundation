name: Build All

on:
  push:
    branches: ['main', 'dev', 'dev/*']

  pull_request:
    branches: ['main']

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

jobs:
  build-macos:
    name: Build
    runs-on: macos-latest
    strategy:
      fail-fast: false
      matrix:
        config: [Release, Debug]
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          submodules: recursive
          fetch-tags: true
          fetch-depth: 0

      - name: Setup Xcode
        run: |
          sudo xcode-select --switch /Applications/Xcode.app
          xcodebuild -version

      - name: Versioning
        run: |
          TAG=$(git describe --long --all)
          VERSION=${TAG:6} 
          echo "" >> src/predef.h
          echo "#define CURRENT_VERSION $VERSION" >> src/predef.h
          echo "----------------------------"
          cat src/predef.h
        shell: bash

      - name: List Xcode schemes
        run: |
          if [ -f "foo_out_avfoundation.xcworkspace/contents.xcworkspacedata" ]; then
            xcodebuild -list -workspace foo_out_avfoundation.xcworkspace
          else
            xcodebuild -list -project foo_out_avfoundation.xcodeproj
          fi

      - name: Build component (Debug)
        if: matrix.config == 'Debug'
        run: |
          if [ -f "foo_out_avfoundation.xcworkspace/contents.xcworkspacedata" ]; then
            xcodebuild clean build \
              -workspace foo_out_avfoundation.xcworkspace \
              -scheme foo_out_avfoundation \
              -configuration ${{ matrix.config }} \
              -sdk macosx \
              CODE_SIGN_IDENTITY="" \
              CODE_SIGNING_REQUIRED=NO \
              CODE_SIGNING_ALLOWED=NO \
              DEVELOPMENT_TEAM=""
          else
            xcodebuild clean build \
              -project foo_out_avfoundation.xcodeproj \
              -target foo_out_avfoundation \
              -configuration ${{ matrix.config }} \
              -sdk macosx \
              CODE_SIGN_IDENTITY="" \
              CODE_SIGNING_REQUIRED=NO \
              CODE_SIGNING_ALLOWED=NO \
              DEVELOPMENT_TEAM=""
          fi

      - name: Import Certificate
        if: matrix.config == 'Release'
        uses: apple-actions/import-codesign-certs@v1
        with:
          p12-file-base64: ${{ secrets.CERTIFICATES_P12_B64 }}
          p12-password: ${{ secrets.CERTIFICATES_P12_PASSWORD }}

      - name: Build component (Release)
        if: matrix.config == 'Release'
        run: |
          if [ -f "foo_out_avfoundation.xcworkspace/contents.xcworkspacedata" ]; then
            xcodebuild clean build \
              -workspace foo_out_avfoundation.xcworkspace \
              -scheme foo_out_avfoundation \
              -configuration ${{ matrix.config }} \
              -sdk macosx \
              CODE_SIGN_IDENTITY="-" \
              DEVELOPMENT_TEAM="${{ secrets.TEAM_ID }}" \
              -allowProvisioningUpdates
          else
            xcodebuild clean build \
              -project foo_out_avfoundation.xcodeproj \
              -target foo_out_avfoundation \
              -configuration ${{ matrix.config }} \
              -sdk macosx \
              CODE_SIGN_IDENTITY="-" \
              DEVELOPMENT_TEAM="${{ secrets.TEAM_ID }}" \
              -allowProvisioningUpdates
          fi

      - name: Upload Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: foo_out_avfoundation-macos-${{ matrix.config }}
          path: ${{ github.workspace }}/dist
          if-no-files-found: error
